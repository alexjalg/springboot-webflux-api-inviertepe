openapi: 3.0.3
info:
  title: Swagger Banco InviertePE
  description: |-
    Documentation about apis from the Bank InviertePE
  contact:
    email: alexjalg@gmail.com
  version: 1.0.0
externalDocs:
  description: Project repository
  url: https://github.com/alexjalg
servers:
  - url: http://localhost:8082/api
tags:
  - name: customer
    description: Customer information
  - name: product
    description: Customer bank product information
  - name: transaction
    description: Bank product transaction information  
paths:
  /customer:
    post:
      tags:
        - customer
      summary: Add a new customer to the bank InviertePE
      description: Add a new customer to the bank InviertePE
      operationId: addCustomer
      requestBody:
        description: Create a new customer in the bank
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /product/bankAccount:
    post:
      tags:
        - product
      summary: Add a new bank account to the customer 
      description: Add a new bank account to the customer
      operationId: addBankAccount
      requestBody:
        description: Create a new bank account to the customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/BankAccountResponse'
        '400':
          description: Invalid input
        '422':
          description: Validation exception  
  /product/creditCard:
    post:
      tags:
        - product
      summary: Add a new credit card to the customer 
      description: Add a new credit card to the customer
      operationId: addCreditCard
      requestBody:
        description: Create a new credit card to the customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreditCardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreditCardRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /product/loan:
    post:
      tags:
        - product
      summary: Add a new loan to the customer 
      description: Add a new loan to the customer
      operationId: addLoan
      requestBody:
        description: Create a new loan to the customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/LoanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoanRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/LoanResponse'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /product/balance/{customerId}:
    get:
      tags:
        - product
      summary: Find for available balances of the customer's products.
      description: Returns product balances
      operationId: getProdutsById
      parameters:
        - name: customerId
          in: path
          description: Id of customer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Balance'
        '400':
          description: Invalid ID supplied
        '404':
          description: Customer not found
  /transaction:
    post:
      tags:
        - transaction
      summary: Add transaction for banking product
      description: Add transaction for banking product
      operationId: addBankingProductTransaction
      requestBody:
        description: Create a new transaction for banking product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/xml:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
            application/xml:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /transaction/{productId}:
    get:
      tags:
        - transaction
      summary: Find transactions of a banking product
      description: Returns transactions
      operationId: getTransactionsByProductId
      parameters:
        - name: productId
          in: path
          description: Id of banking product to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid ID
        '404':
          description: Not found
components:
  schemas:
    CustomerRequest:
      required: 
        - name
        - type
      type: object
      properties:
        name:
          type: string
          example: Jose Alejandro Laura Gonzalo
        type:
          type: string
          description: type of customer
          example: personal
          enum:
            - personal
            - empresarial
    CustomerResponse:
      type: object
      properties:
        id:
          type: string
          example: 67263e246a2d762658e31892
        name:
          type: string
          example: Jose Alejandro Laura Gonzalo
        type:
          type: string
          description: type of customer
          example: personal
          enum:
            - personal
            - empresarial
    BankAccountRequest:
      required:
        - customerId
        - holders
        - signatories
        - typeBankAccount
        - balance
      type: object
      properties:
        customerId:
          type: string
          example: 67263e246a2d762658e31892
        holders:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: holder
          example: [67263e246a2d762658e31892 , 67263e246a2d762658e31891]
        signatories:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: signatory
          example: [67263e246a2d762658e31832 , 67263e246a2d762658e31322]
        typeBankAccount:
          type: string
          description: type of bank account
          example: ahorro
          enum:
            - ahorro
            - cuenta corriente
            - plazo fijo
        balance:
          type: number
          format: double
          example: 15000.00
      xml:
        name: bankAccountRequest
    BankAccountResponse:
      type: object
      properties:
        id:
          type: string
          example: 67263e246a2d762658e31892
        bankAccountNumber:
          type: string
          example: "123412341234"
        holders:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: holder
          example: [100000 , 100002]
        signatories:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: signatory
          example: [100000 , 100002]
        typeBankAccount:
          type: string
          description: type of bank account
          example: ahorro
          enum:
            - ahorro
            - cuenta corriente
            - plazo fijo
        balance:
          type: number
          format: double
          example: 15000.00
      xml:
        name: bankAccountResponse
    CreditCardRequest:
      required:
        - customerId
        - type
        - creditLimit
      type: object
      properties:
        customerId:
          type: string
          example: 67263e246a2d762658e31892
        type:
          type: string
          description: type of credit card
          example: personal
          enum:
            - personal
            - empresarial
        creditLimit:
          type: number
          format: double
          example: 15000.00
      xml:
        name: creditCard
    CreditCardResponse:
      type: object
      properties:
        id:
          type: string
          example: 67263e246a2d762658e31892	
        creditCardNumber:
          type: string
          example: "1234123412341234"
        type:
          type: string
          description: type of credit card
          example: personal
          enum:
            - personal
            - empresarial
        creditLimit:
          type: number
          format: double
          example: 15000.00
        balance:
          type: number
          format: double
          example: 15000.00
      xml:
        name: creditCard
    LoanRequest:
      required:
        - customerId
        - type
        - amount
        - interestRate
        - termMonths
      type: object
      properties:
        customerId:
          type: string
          example: 67263e246a2d762658e31892
        type:
          type: string
          description: type of loan
          example: personal
          enum:
            - personal
            - empresarial
        amount:
          type: number
          format: double
          example: 15000.00
        interestRate:
          type: number
          format: float
          example: 10.00
        termMonths:
          type: integer
          format: int32
          example: 7
      xml:
        name: Loan
    LoanResponse:
      type: object
      properties:
        id:
          type: string
          example: 67263e246a2d762658e31833
        type:
          type: string
          description: type of loan
          example: personal
          enum:
            - personal
            - empresarial
        amount:
          type: number
          format: double
          example: 15000.00
        interestRate:
          type: number
          format: float
          example: 10.00
        termMonths:
          type: integer
          format: int32
          example: 7
      xml:
        name: Loan
    Balance:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        name:
          type: string
          example: Jose Alejandro Laura Gonzalo
        type:
          type: string
          description: type of customer
          example: personal
          enum:
            - personal
            - empresarial
        creditCards:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CreditCardResponse'
        bankAccounts:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/BankAccountResponse'
      xml:
        name: balance
    Transaction:
      required:
        - productId
        - type
        - amount
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        productId:
          type: integer
          format: int64
          example: 100000
        type:
          type: string
          description: type of product transaction
          example: pago
          enum:
            - pago
            - consumo
            - deposito
            - retiro
        concept:
          type: string
        transactionDate:
          type: string
          format: date-time
        amount:
          type: number
          format: double
          example: 15000.00
      xml:
        name: transaction